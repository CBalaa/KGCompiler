Graph(x: int64[1, 2][cuda], x_1: int64[1, 14505][cuda]){
  c = Constant(float32[14505, 800][cuda])
  c_1 = Constant(float32[474, 400][cuda])
  c_2 = Constant(float32[1200, 1600][cuda])
  c_3 = Constant(float32[1600][cuda])
  c_4 = Constant(float32[1600, 1600][cuda])
  c_5 = Constant(float32[1600][cuda])
  c_6 = Constant(float32[1600, 800][cuda])
  c_7 = Constant(float32[800][cuda])
  c_8 = Constant(float32[1][cuda])
  x_2: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 0], ends=[1, 1], axes=[0, 1], strides=[1, 1])  
  x_3: int64[1][cuda] = Squeeze(x_2, dims=[1])  
  x_4: float32[1, 800][cuda] = Take(c, x_3, axis=0)  
  x_5: float32[1, 800][cuda] = AddScalar(x_4, scalar=1)  
  x_6: float32[1, 800][cuda] = Clamp(x_5)  
  x_7: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 1], ends=[1, 2], axes=[0, 1], strides=[1, 1])  
  x_8: int64[1][cuda] = Squeeze(x_7, dims=[1])  
  x_9: float32[1, 400][cuda] = Take(c_1, x_8, axis=0)  
  x_10: float32[1, 1200][cuda] = Concat(x_6, x_9, axis=1)  
  x_11: float32[1, 1600][cuda] = Matmul(x_10, c_2, require_prologue=False)  
  x_12: float32[1, 1600][cuda] = Add(x_11, c_3)  
  x_13: float32[1, 1600][cuda] = Relu(x_12)  
  x_14: float32[1, 1600][cuda] = Matmul(x_13, c_4, require_prologue=False)  
  x_15: float32[1, 1600][cuda] = Add(x_14, c_5)  
  x_16: float32[1, 1600][cuda] = Relu(x_15)  
  x_17: float32[1, 800][cuda] = Matmul(x_16, c_6, require_prologue=False)  
  x_18: float32[1, 800][cuda] = Add(x_17, c_7)  
  x_19: float32[1, 800][cuda] = AddScalar(x_18, scalar=1)  
  x_20: float32[1, 800][cuda] = Clamp(x_19)  
  x_21: float32[1, 400][cuda] = StridedSlice(x_20, starts=[0], ends=[400], axes=[1], strides=[1])  
  x_22: float32[1, 400][cuda] = Concat(x_21, axis=0)  
  x_23: float32[1, 1, 400][cuda] = Unsqueeze(x_22, dims=[1])  
  x_24: float32[1, 1, 400, 1][cuda] = Unsqueeze(x_23, dims=[3])  
  x_25: float32[1, 400][cuda] = StridedSlice(x_20, starts=[400], ends=[800], axes=[1], strides=[1])  
  x_26: float32[1, 400][cuda] = Concat(x_25, axis=0)  
  x_27: float32[1, 1, 400][cuda] = Unsqueeze(x_26, dims=[1])  
  x_28: float32[1, 1, 400, 1][cuda] = Unsqueeze(x_27, dims=[3])  
  x_29: float32[1, 1, 400, 2][cuda] = Concat(x_24, x_28, axis=3)  
  x_30: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 0], ends=[1, 1, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_31: float32[1, 1, 400][cuda] = Squeeze(x_30, dims=[3])  
  x_32: float32[1, 1, 400][cuda] = Gamma(x_31)  
  x_33: float32[1, 1, 400][cuda] = Abs(x_32)  
  x_34: float32[1, 1, 400][cuda] = Log(x_33)  
  x_35: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 1], ends=[1, 1, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_36: float32[1, 1, 400][cuda] = Squeeze(x_35, dims=[3])  
  x_37: float32[1, 1, 400][cuda] = Gamma(x_36)  
  x_38: float32[1, 1, 400][cuda] = Abs(x_37)  
  x_39: float32[1, 1, 400][cuda] = Log(x_38)  
  x_40: float32[1, 1, 400][cuda] = Add(x_34, x_39)  
  x_41: int64[1, 14505][cuda] = StridedSlice(x_1, starts=[0, 0], ends=[1, 14505], axes=[0, 1], strides=[1, 1])  
  x_42: int64[14505][cuda] = Squeeze(x_41, dims=[0])  
  x_43: int64[14505][cuda] = Reshape(x_42, shape=[-1])  
  x_44: float32[14505, 800][cuda] = Take(c, x_43, axis=0)  
  x_45: float32[1, 14505, 800][cuda] = Reshape(x_44, shape=[1, 14505, -1])  
  x_46: float32[1, 14505, 800][cuda] = AddScalar(x_45, scalar=1)  
  x_47: float32[1, 14505, 800][cuda] = Clamp(x_46)  
  x_48: float32[1, 14505, 400][cuda] = StridedSlice(x_47, starts=[0], ends=[400], axes=[2], strides=[1])  
  x_49: float32[1, 14505, 400, 1][cuda] = Unsqueeze(x_48, dims=[3])  
  x_50: float32[1, 14505, 400][cuda] = StridedSlice(x_47, starts=[400], ends=[800], axes=[2], strides=[1])  
  x_51: float32[1, 14505, 400, 1][cuda] = Unsqueeze(x_50, dims=[3])  
  x_52: float32[1, 14505, 400, 2][cuda] = Concat(x_49, x_51, axis=3)  
  x_53: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_54: float32[1, 14505, 400][cuda] = Squeeze(x_53, dims=[3])  
  x_55: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_56: float32[1, 14505, 400][cuda] = Squeeze(x_55, dims=[3])  
  x_57: float32[1, 14505, 400][cuda] = Add(x_54, x_56)  
  x_58: float32[1, 14505, 400][cuda] = Gamma(x_57)  
  x_59: float32[1, 14505, 400][cuda] = Abs(x_58)  
  x_60: float32[1, 14505, 400][cuda] = Log(x_59)  
  x_61: float32[1, 14505, 400][cuda] = Add(x_40, x_60)  
  x_62: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_63: float32[1, 14505, 400][cuda] = Squeeze(x_62, dims=[3])  
  x_64: float32[1, 14505, 400][cuda] = Gamma(x_63)  
  x_65: float32[1, 14505, 400][cuda] = Abs(x_64)  
  x_66: float32[1, 14505, 400][cuda] = Log(x_65)  
  x_67: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_68: float32[1, 14505, 400][cuda] = Squeeze(x_67, dims=[3])  
  x_69: float32[1, 14505, 400][cuda] = Gamma(x_68)  
  x_70: float32[1, 14505, 400][cuda] = Abs(x_69)  
  x_71: float32[1, 14505, 400][cuda] = Log(x_70)  
  x_72: float32[1, 14505, 400][cuda] = Add(x_66, x_71)  
  x_73: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 0], ends=[1, 1, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_74: float32[1, 1, 400][cuda] = Squeeze(x_73, dims=[3])  
  x_75: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 1], ends=[1, 1, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_76: float32[1, 1, 400][cuda] = Squeeze(x_75, dims=[3])  
  x_77: float32[1, 1, 400][cuda] = Add(x_74, x_76)  
  x_78: float32[1, 1, 400][cuda] = Gamma(x_77)  
  x_79: float32[1, 1, 400][cuda] = Abs(x_78)  
  x_80: float32[1, 1, 400][cuda] = Log(x_79)  
  x_81: float32[1, 14505, 400][cuda] = Add(x_72, x_80)  
  x_82: float32[1, 14505, 400][cuda] = Subtract(x_61, x_81)  
  x_83: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_84: float32[1, 14505, 400][cuda] = Squeeze(x_83, dims=[3])  
  x_85: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 0], ends=[1, 1, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_86: float32[1, 1, 400][cuda] = Squeeze(x_85, dims=[3])  
  x_87: float32[1, 14505, 400][cuda] = Subtract(x_84, x_86)  
  x_88: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_89: float32[1, 14505, 400][cuda] = Squeeze(x_88, dims=[3])  
  x_90: float32[1, 14505, 400][cuda] = Digamma(x_89)  
  x_91: float32[1, 14505, 400][cuda] = Multiply(x_87, x_90)  
  x_92: float32[1, 14505, 400][cuda] = Add(x_82, x_91)  
  x_93: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_94: float32[1, 14505, 400][cuda] = Squeeze(x_93, dims=[3])  
  x_95: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 1], ends=[1, 1, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_96: float32[1, 1, 400][cuda] = Squeeze(x_95, dims=[3])  
  x_97: float32[1, 14505, 400][cuda] = Subtract(x_94, x_96)  
  x_98: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_99: float32[1, 14505, 400][cuda] = Squeeze(x_98, dims=[3])  
  x_100: float32[1, 14505, 400][cuda] = Digamma(x_99)  
  x_101: float32[1, 14505, 400][cuda] = Multiply(x_97, x_100)  
  x_102: float32[1, 14505, 400][cuda] = Add(x_92, x_101)  
  x_103: float32[1, 14505, 400][cuda] = Subtract(x_77, x_57)  
  x_104: float32[1, 14505, 400][cuda] = Digamma(x_57)  
  x_105: float32[1, 14505, 400][cuda] = Multiply(x_103, x_104)  
  x_106: float32[1, 14505, 400][cuda] = Add(x_102, x_105)  
  x_107: float32[1, 14505][cuda] = KgNorm(x_106, p=1, dim=2, eps=1e-12)  
  x_108: float32[1, 14505][cuda] = Subtract(c_8, x_107)  
  x_109: float32[1, 14505][cuda] = Concat(x_108, axis=0)  
  return x_109, x_29, x_52
}
Graph(x: int64[1, 2][cuda], x_1: int64[1, 14505][cuda]){
  c = Constant(float32[14505, 800][cuda])
  c_1 = Constant(float32[474, 400][cuda])
  c_2 = Constant(float32[1200, 1600][cuda])
  c_3 = Constant(float32[1600][cuda])
  c_4 = Constant(float32[1600, 1600][cuda])
  c_5 = Constant(float32[1600][cuda])
  c_6 = Constant(float32[1600, 800][cuda])
  c_7 = Constant(float32[800][cuda])
  c_8 = Constant(float32[1][cuda])
  x_2: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 0], ends=[1, 1], axes=[0, 1], strides=[1, 1])  
  x_3: int64[1][cuda] = Squeeze(x_2, dims=[1])  
  x_4: float32[1, 800][cuda] = Take(c, x_3, axis=0)  
  x_5: float32[1, 800][cuda] = AddScalar(x_4, scalar=1)  
  x_6: float32[1, 800][cuda] = Clamp(x_5)  
  x_7: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 1], ends=[1, 2], axes=[0, 1], strides=[1, 1])  
  x_8: int64[1][cuda] = Squeeze(x_7, dims=[1])  
  x_9: float32[1, 400][cuda] = Take(c_1, x_8, axis=0)  
  x_10: float32[1, 1200][cuda] = Concat(x_6, x_9, axis=1)  
  x_11: float32[1, 1600][cuda] = Matmul(x_10, c_2, require_prologue=False)  
  x_12: float32[1, 1600][cuda] = Add(x_11, c_3)  
  x_13: float32[1, 1600][cuda] = Relu(x_12)  
  x_14: float32[1, 1600][cuda] = Matmul(x_13, c_4, require_prologue=False)  
  x_15: float32[1, 1600][cuda] = Add(x_14, c_5)  
  x_16: float32[1, 1600][cuda] = Relu(x_15)  
  x_17: float32[1, 800][cuda] = Matmul(x_16, c_6, require_prologue=False)  
  x_18: float32[1, 800][cuda] = Add(x_17, c_7)  
  x_19: float32[1, 800][cuda] = AddScalar(x_18, scalar=1)  
  x_20: float32[1, 800][cuda] = Clamp(x_19)  
  x_21: float32[1, 400][cuda] = StridedSlice(x_20, starts=[0], ends=[400], axes=[1], strides=[1])  
  x_22: float32[1, 400][cuda] = Concat(x_21, axis=0)  
  x_23: float32[1, 1, 400][cuda] = Unsqueeze(x_22, dims=[1])  
  x_24: float32[1, 1, 400, 1][cuda] = Unsqueeze(x_23, dims=[3])  
  x_25: float32[1, 400][cuda] = StridedSlice(x_20, starts=[400], ends=[800], axes=[1], strides=[1])  
  x_26: float32[1, 400][cuda] = Concat(x_25, axis=0)  
  x_27: float32[1, 1, 400][cuda] = Unsqueeze(x_26, dims=[1])  
  x_28: float32[1, 1, 400, 1][cuda] = Unsqueeze(x_27, dims=[3])  
  x_29: float32[1, 1, 400, 2][cuda] = Concat(x_24, x_28, axis=3)  
  x_30: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 0], ends=[1, 1, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_31: float32[1, 1, 400][cuda] = Squeeze(x_30, dims=[3])  
  x_32: float32[1, 1, 400][cuda] = Gamma(x_31)  
  x_33: float32[1, 1, 400][cuda] = Abs(x_32)  
  x_34: float32[1, 1, 400][cuda] = Log(x_33)  
  x_35: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 1], ends=[1, 1, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_36: float32[1, 1, 400][cuda] = Squeeze(x_35, dims=[3])  
  x_37: float32[1, 1, 400][cuda] = Gamma(x_36)  
  x_38: float32[1, 1, 400][cuda] = Abs(x_37)  
  x_39: float32[1, 1, 400][cuda] = Log(x_38)  
  x_40: float32[1, 1, 400][cuda] = Add(x_34, x_39)  
  x_41: int64[1, 14505][cuda] = StridedSlice(x_1, starts=[0, 0], ends=[1, 14505], axes=[0, 1], strides=[1, 1])  
  x_42: int64[14505][cuda] = Squeeze(x_41, dims=[0])  
  x_43: int64[14505][cuda] = Reshape(x_42, shape=[-1])  
  x_44: float32[14505, 800][cuda] = Take(c, x_43, axis=0)  
  x_45: float32[1, 14505, 800][cuda] = Reshape(x_44, shape=[1, 14505, -1])  
  x_46: float32[1, 14505, 800][cuda] = AddScalar(x_45, scalar=1)  
  x_47: float32[1, 14505, 800][cuda] = Clamp(x_46)  
  x_48: float32[1, 14505, 400][cuda] = StridedSlice(x_47, starts=[0], ends=[400], axes=[2], strides=[1])  
  x_49: float32[1, 14505, 400, 1][cuda] = Unsqueeze(x_48, dims=[3])  
  x_50: float32[1, 14505, 400][cuda] = StridedSlice(x_47, starts=[400], ends=[800], axes=[2], strides=[1])  
  x_51: float32[1, 14505, 400, 1][cuda] = Unsqueeze(x_50, dims=[3])  
  x_52: float32[1, 14505, 400, 2][cuda] = Concat(x_49, x_51, axis=3)  
  x_53: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_54: float32[1, 14505, 400][cuda] = Squeeze(x_53, dims=[3])  
  x_55: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_56: float32[1, 14505, 400][cuda] = Squeeze(x_55, dims=[3])  
  x_57: float32[1, 14505, 400][cuda] = Add(x_54, x_56)  
  x_58: float32[1, 14505, 400][cuda] = Gamma(x_57)  
  x_59: float32[1, 14505, 400][cuda] = Abs(x_58)  
  x_60: float32[1, 14505, 400][cuda] = Log(x_59)  
  x_61: float32[1, 14505, 400][cuda] = Add(x_40, x_60)  
  x_62: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_63: float32[1, 14505, 400][cuda] = Squeeze(x_62, dims=[3])  
  x_64: float32[1, 14505, 400][cuda] = Gamma(x_63)  
  x_65: float32[1, 14505, 400][cuda] = Abs(x_64)  
  x_66: float32[1, 14505, 400][cuda] = Log(x_65)  
  x_67: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_68: float32[1, 14505, 400][cuda] = Squeeze(x_67, dims=[3])  
  x_69: float32[1, 14505, 400][cuda] = Gamma(x_68)  
  x_70: float32[1, 14505, 400][cuda] = Abs(x_69)  
  x_71: float32[1, 14505, 400][cuda] = Log(x_70)  
  x_72: float32[1, 14505, 400][cuda] = Add(x_66, x_71)  
  x_73: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 0], ends=[1, 1, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_74: float32[1, 1, 400][cuda] = Squeeze(x_73, dims=[3])  
  x_75: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 1], ends=[1, 1, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_76: float32[1, 1, 400][cuda] = Squeeze(x_75, dims=[3])  
  x_77: float32[1, 1, 400][cuda] = Add(x_74, x_76)  
  x_78: float32[1, 1, 400][cuda] = Gamma(x_77)  
  x_79: float32[1, 1, 400][cuda] = Abs(x_78)  
  x_80: float32[1, 1, 400][cuda] = Log(x_79)  
  x_81: float32[1, 14505, 400][cuda] = Add(x_72, x_80)  
  x_82: float32[1, 14505, 400][cuda] = Subtract(x_61, x_81)  
  x_83: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_84: float32[1, 14505, 400][cuda] = Squeeze(x_83, dims=[3])  
  x_85: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 0], ends=[1, 1, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_86: float32[1, 1, 400][cuda] = Squeeze(x_85, dims=[3])  
  x_87: float32[1, 14505, 400][cuda] = Subtract(x_84, x_86)  
  x_88: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 0], ends=[1, 14505, 400, 1], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_89: float32[1, 14505, 400][cuda] = Squeeze(x_88, dims=[3])  
  x_90: float32[1, 14505, 400][cuda] = Digamma(x_89)  
  x_91: float32[1, 14505, 400][cuda] = Multiply(x_87, x_90)  
  x_92: float32[1, 14505, 400][cuda] = Add(x_82, x_91)  
  x_93: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_94: float32[1, 14505, 400][cuda] = Squeeze(x_93, dims=[3])  
  x_95: float32[1, 1, 400, 1][cuda] = StridedSlice(x_29, starts=[0, 0, 0, 1], ends=[1, 1, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_96: float32[1, 1, 400][cuda] = Squeeze(x_95, dims=[3])  
  x_97: float32[1, 14505, 400][cuda] = Subtract(x_94, x_96)  
  x_98: float32[1, 14505, 400, 1][cuda] = StridedSlice(x_52, starts=[0, 0, 0, 1], ends=[1, 14505, 400, 2], axes=[0, 1, 2, 3], strides=[1, 1, 1, 1])  
  x_99: float32[1, 14505, 400][cuda] = Squeeze(x_98, dims=[3])  
  x_100: float32[1, 14505, 400][cuda] = Digamma(x_99)  
  x_101: float32[1, 14505, 400][cuda] = Multiply(x_97, x_100)  
  x_102: float32[1, 14505, 400][cuda] = Add(x_92, x_101)  
  x_103: float32[1, 14505, 400][cuda] = Subtract(x_77, x_57)  
  x_104: float32[1, 14505, 400][cuda] = Digamma(x_57)  
  x_105: float32[1, 14505, 400][cuda] = Multiply(x_103, x_104)  
  x_106: float32[1, 14505, 400][cuda] = Add(x_102, x_105)  
  x_107: float32[1, 14505][cuda] = KgNorm(x_106, p=1, dim=2, eps=1e-12)  
  x_108: float32[1, 14505][cuda] = Subtract(c_8, x_107)  
  x_109: float32[1, 14505][cuda] = Concat(x_108, axis=0)  
  return x_109, x_29, x_52
}
