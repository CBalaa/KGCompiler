Graph(x: int64[1, 2][cuda], x_1: int64[1, 14505][cuda]){ // L_batch_queries_dict_e_r_ L_negative_sample_
  c = Constant(float32[14505, 400][cuda]) // l__self___entity_embedding 
  c_1 = Constant(float32[474, 400][cuda])
  c_2 = Constant(float32[474, 400][cuda])
  c_3 = Constant(float32[1, 400][cuda])
  c_4 = Constant(float32[1][cuda]) // getitem
  x_2: int64[1, 14505][cuda] = StridedSlice(x_1, starts=[0, 0], ends=[1, 14505], axes=[0, 1], strides=[1, 1])  
  x_3: int64[14505][cuda] = Squeeze(x_2, dims=[0])  
  x_4: int64[14505][cuda] = Reshape(x_3, shape=[-1])  
  x_5: float32[14505, 400][cuda] = Take(c, x_4, axis=0)  
  x_6: float32[1, 14505, 400][cuda] = Reshape(x_5, shape=[1, 14505, -1])  
  x_7: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 0], ends=[1, 1], axes=[0, 1], strides=[1, 1])  
  x_8: int64[1][cuda] = Squeeze(x_7, dims=[1])  
  x_9: float32[1, 400][cuda] = Take(c, x_8, axis=0)  
  x_10: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 1], ends=[1, 2], axes=[0, 1], strides=[1, 1])  
  x_11: int64[1][cuda] = Squeeze(x_10, dims=[1])  
  x_12: float32[1, 400][cuda] = Take(c_1, x_11, axis=0)  
  x_13: float32[1, 400][cuda] = Add(x_9, x_12)  
  x_14: float32[1, 400][cuda] = Concat(x_13, axis=0)  
  x_15: float32[1, 1, 400][cuda] = Unsqueeze(x_14, dims=[1])  
  x_16: float32[1, 14505, 400][cuda] = Subtract(x_6, x_15)  
  x_17: float32[1, 14505, 400][cuda] = Abs(x_16)  
  x_18: int64[1, 1][cuda] = StridedSlice(x, starts=[0, 1], ends=[1, 2], axes=[0, 1], strides=[1, 1])  
  x_19: int64[1][cuda] = Squeeze(x_18, dims=[1])  
  x_20: float32[1, 400][cuda] = Take(c_2, x_19, axis=0)  
  x_21: float32[1, 400][cuda] = Add(c_3, x_20)  
  x_22: float32[1, 400][cuda] = Concat(x_21, axis=0)  
  x_23: float32[1, 1, 400][cuda] = Unsqueeze(x_22, dims=[1])  
  x_24: float32[1, 14505, 400][cuda] = Subtract(x_17, x_23)  
  x_25: float32[1, 14505, 400][cuda] = Relu(x_24)  
  x_26: float32[1, 14505, 400][cuda] = LpNorm(x_25, p=1, dim=2, eps=1e-12)  
  x_27: float32[1, 14505, 400][cuda] = Subtract(c_4, x_26)  
  x_28: float32[1, 14505, 400][cuda] = Min(x_17, x_23)  
  x_29: float32[1, 14505, 400][cuda] = LpNorm(x_28, p=1, dim=2, eps=1e-12)  
  x_30: float32[1, 14505, 400][cuda] = MultiplyScalar(x_29, scalar=0.02f)  
  x_31: float32[1, 14505, 400][cuda] = Subtract(x_27, x_30)  
  x_32: float32[1, 14505, 400][cuda] = Concat(x_31, axis=0)  
  return x_32
}